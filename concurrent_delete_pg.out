unused step name: pg_locks
unused step name: rollback_to_savepoint_2
unused step name: savepoint_2
unused step name: update_1
unused step name: update_1_2
unused step name: update_1_5
unused step name: update_2
unused step name: update_2_2
unused step name: update_2_5
unused step name: update_2_6
Parsed test spec with 3 sessions

starting permutation: begin_1 begin_2 select_1 update_1_3 select_1 select_2 update_2_3 select_1 commit_1 select_1 select_2 commit_2 select_1 select_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_1_3: UPDATE o_test_1 SET val_1 = val_1 + 10 WHERE val_1 < 10;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_2_3: UPDATE o_test_1 SET val_2 = val_2 + 20 WHERE val_1 < 4; <waiting ...>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)

step commit_1: COMMIT;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;
step update_2_3: <... completed>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)

step commit_2: COMMIT;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
   11|  101
   12|  102
   13|  103
   14|  104
   15|  105
(5 rows)


starting permutation: begin_1 begin_2 begin_3 select_1 delete_1 insert_1_2 select_1 select_2 select_3 delete_2 select_1 select_3 update_3 select_1 rollback_1 insert_2 select_1 select_2 commit_2 commit_3 select_1 select_2 select_3
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_1: DELETE FROM o_test_1 WHERE val_1 = 1;
step insert_1_2: INSERT INTO o_test_1 VALUES (1, 1);
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						-- IF amname = 'orioledb' THEN
						-- 	RAISE NOTICE '%', (SELECT amname);
						-- 	RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						-- END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_2: 
	DELETE FROM o_test_1 WHERE val_1 = 1;
	DO LANGUAGE plpgsql
	$$
	DECLARE
		relname text = 'o_test_1';
		reloid oid = relname::regclass::oid;
		amname pg_catalog.text := (SELECT amname FROM pg_class pc
										JOIN pg_am pa ON relam = pa.oid
										WHERE pc.oid = reloid);
	BEGIN
		IF amname = 'orioledb' THEN
			RAISE NOTICE '%', (SELECT amname);
			RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
		END IF;
	END
	$$;
 <waiting ...>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						-- IF amname = 'orioledb' THEN
						-- 	RAISE NOTICE '%', (SELECT amname);
						-- 	RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						-- END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_3: 
	UPDATE o_test_1 SET val_2 = 3 WHERE val_1 = 1;
	DO LANGUAGE plpgsql
	$$
	DECLARE
		relname text = 'o_test_1';
		reloid oid = relname::regclass::oid;
		amname pg_catalog.text := (SELECT amname FROM pg_class pc
										JOIN pg_am pa ON relam = pa.oid
										WHERE pc.oid = reloid);
	BEGIN
		IF amname = 'orioledb' THEN
			RAISE NOTICE '%', (SELECT amname);
			RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
		END IF;
	END
	$$;
 <waiting ...>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step rollback_1: ROLLBACK;
step delete_2: <... completed>
step insert_2: INSERT INTO o_test_1 VALUES (1, 2);
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step commit_2: COMMIT;
step update_3: <... completed>
step commit_3: COMMIT;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						-- IF amname = 'orioledb' THEN
						-- 	RAISE NOTICE '%', (SELECT amname);
						-- 	RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						-- END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)


starting permutation: begin_1 begin_3 select_1 delete_1_2 select_1 select_2 insert_3_2 begin_2 select_1 select_2 commit_1 select_1 select_2 update_2_3 select_1 commit_3 select_1 select_2 commit_2 select_1 select_2
step begin_1: BEGIN;
step begin_3: BEGIN;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_1_2: DELETE FROM o_test_1 WHERE val_1 IN (1, 2);
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    3|  103
    4|  104
    5|  105
(3 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step insert_3_2: INSERT INTO o_test_1 VALUES (1, 3), (2, 3); <waiting ...>
step begin_2: BEGIN;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    3|  103
    4|  104
    5|  105
(3 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step commit_1: COMMIT;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;
step insert_3_2: <... completed>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    3|  103
    4|  104
    5|  105
(3 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    3|  103
    4|  104
    5|  105
(3 rows)

step update_2_3: UPDATE o_test_1 SET val_2 = val_2 + 20 WHERE val_1 < 4;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    3|  103
    4|  104
    5|  105
(3 rows)

step commit_3: COMMIT;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    3
    2|    3
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|    3
    2|    3
    3|  123
    4|  104
    5|  105
(5 rows)

step commit_2: COMMIT;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|    3
    2|    3
    3|  123
    4|  104
    5|  105
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|    3
    2|    3
    3|  123
    4|  104
    5|  105
(5 rows)


starting permutation: begin_1 begin_2 select_1 update_1_4 select_1 select_2 insert_1 insert_1_2 insert_3 select_1 select_2 update_2_4 select_1 commit_1 select_1 select_2 commit_2 select_1 select_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_1_4: 
	UPDATE o_test_1 SET val_1 = val_1 + 10 WHERE val_1 < 4;
	UPDATE o_test_1 SET val_1 = val_1 - 10 WHERE val_1 = 4;

step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   -6|  104
    5|  105
   11|  101
   12|  102
   13|  103
(5 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step insert_1: INSERT INTO o_test_1 VALUES (100, 1), (200, 2);
step insert_1_2: INSERT INTO o_test_1 VALUES (1, 1);
step insert_3: INSERT INTO o_test_1 VALUES (2, 3); <waiting ...>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(8 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_2_4: UPDATE o_test_1 SET val_2 = val_2 + 20; <waiting ...>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(8 rows)

step commit_1: COMMIT;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;
step insert_3: <... completed>
step update_2_4: <... completed>
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    2|    3
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(9 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
   -6|  124
    1|    1
    2|    3
    5|  125
   11|  121
   12|  122
   13|  123
  100|    1
  200|    2
(9 rows)

step commit_2: COMMIT;
step select_1: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END $$;

val_1|val_2
-----+-----
   -6|  124
    1|    1
    2|    3
    5|  125
   11|  121
   12|  122
   13|  123
  100|    1
  200|    2
(9 rows)

step select_2: 
					SELECT * FROM o_test_1 ORDER BY val_1;
					DO LANGUAGE plpgsql
					$$
					DECLARE
						relname text = 'o_test_1';
						reloid oid = relname::regclass::oid;
						amname pg_catalog.text := (SELECT amname FROM pg_class pc
														JOIN pg_am pa ON relam = pa.oid
														WHERE pc.oid = reloid);
					BEGIN
						IF amname = 'orioledb' THEN
							RAISE NOTICE '%', (SELECT amname);
							RAISE NOTICE '%', orioledb_tbl_structure(reloid, 'bUCKSivo');
						END IF;
					END
					$$;

val_1|val_2
-----+-----
   -6|  124
    1|    1
    2|    3
    5|  125
   11|  121
   12|  122
   13|  123
  100|    1
  200|    2
(9 rows)

